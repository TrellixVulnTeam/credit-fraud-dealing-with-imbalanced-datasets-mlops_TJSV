name: evaluate, build and Integrate to GitHub Packages

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'src/**'
      - '.github/**'

env:
  IMAGE_NAME: credit-fraud-ml

jobs:
  # docker-lint:
  #   name: Hadolint Dockerfile
  #   runs-on: macOS-latest
  #   timeout-minutes: 30

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Run hadolint
  #       run: |
  #         brew install hadolint
  #         hadolint ./Dockerfile | tee -a hadolint_lint.txt
  #         lintErrors=$(stat -f%z hadolint_lint.txt)
  #         if [ "$lintErrors" -gt "0" ]; then
  #             echo "Errors have been found, please see below"
  #             cat hadolint_lint.txt
  #             exit 1
  #         else
  #             echo "No erros found on Dockerfile!!"
  #         fi
  
  python-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run linting
        run: |
          pip install --no-cache-dir pipenv==2020.8.13
          pipenv install --dev
          pipenv run flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          pipenv run flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  python-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run test
        run: |
          pip install --no-cache-dir pipenv==2020.8.13
          pipenv install --dev
          pipenv run pytest --cov-report=term-missing --cov=src --cov-fail-under=0.4
          pipenv run pytest --cov-report=html --cov=src
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 5

  setup-build-publish-deploy:
    name: Setup, Build, Publish
    needs: [docker-lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/{{ $IMAGE_NAME }}
          tag_with_sha: true